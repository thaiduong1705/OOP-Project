// <auto-generated />
using System;
using JobRecommendationWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobRecommendationWeb.Migrations
{
    [DbContext(typeof(JobRecommendationContext))]
    [Migration("20221223171448_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Chitietlamviec", b =>
                {
                    b.Property<int>("MaLslv")
                        .HasColumnType("int");

                    b.Property<int>("MaBaiDang")
                        .HasColumnType("int");

                    b.HasKey("MaLslv", "MaBaiDang")
                        .HasName("CHITIETLAMVIEC_PK");

                    b.HasIndex("MaBaiDang");

                    b.ToTable("CHITIETLAMVIEC", (string)null);
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Baidang", b =>
                {
                    b.Property<int>("MaBaiDang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBaiDang"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LuongMax")
                        .HasColumnType("int");

                    b.Property<int?>("LuongMin")
                        .HasColumnType("int");

                    b.Property<int?>("MaCongTy")
                        .HasColumnType("int");

                    b.Property<int?>("MaTaiKhoan")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayDangBai")
                        .HasColumnType("datetime");

                    b.Property<int?>("ThamNien")
                        .HasColumnType("int");

                    b.Property<string>("TieuDe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ViecLam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebsiteBaiGoc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaBaiDang")
                        .HasName("BAIDANG_PK");

                    b.HasIndex("MaCongTy");

                    b.HasIndex("MaTaiKhoan");

                    b.ToTable("BAIDANG", (string)null);
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Chucvu", b =>
                {
                    b.Property<int>("MaChucVu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChucVu"));

                    b.Property<string>("TenChucVu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaChucVu")
                        .HasName("CHUCVU_PK");

                    b.ToTable("CHUCVU", (string)null);
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Cv", b =>
                {
                    b.Property<int>("MaCv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaCV");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCv"));

                    b.Property<byte[]>("AnhCv")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("AnhCV");

                    b.Property<int?>("MaUngVien")
                        .HasColumnType("int");

                    b.HasKey("MaCv")
                        .HasName("CV_PK");

                    b.HasIndex("MaUngVien");

                    b.ToTable("CV", (string)null);
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Hosocongty", b =>
                {
                    b.Property<int>("MaCongTy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCongTy"));

                    b.Property<byte[]>("AnhCongTy")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CheDoDaiNgo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTaThem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuocTich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCongTy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaCongTy")
                        .HasName("HOSOCONGTY_PK");

                    b.ToTable("HOSOCONGTY", (string)null);
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Kinang", b =>
                {
                    b.Property<int>("MaKiNang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKiNang"));

                    b.Property<string>("TenKiNang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKiNang")
                        .HasName("KINANG_PK");

                    b.ToTable("KINANG", (string)null);
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Lichsulamviec", b =>
                {
                    b.Property<int>("MaLslv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaLSLV");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLslv"));

                    b.Property<string>("CaLamViec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaTaiKhoan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayLamViec")
                        .HasColumnType("datetime");

                    b.HasKey("MaLslv")
                        .HasName("LICHSULAMVIEC_PK");

                    b.HasIndex("MaTaiKhoan");

                    b.ToTable("LICHSULAMVIEC", (string)null);
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Nhanvien", b =>
                {
                    b.Property<int>("MaNhanVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNhanVien"));

                    b.Property<string>("Email")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Sdt")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("SDT");

                    b.Property<string>("TenNhanVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Tuoi")
                        .HasColumnType("int");

                    b.HasKey("MaNhanVien")
                        .HasName("NHANVIEN_PK");

                    b.ToTable("NHANVIEN", (string)null);
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Phieuphat", b =>
                {
                    b.Property<int>("MaPhieuPhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuPhat"));

                    b.Property<int?>("MaPhieuToCao")
                        .HasColumnType("int");

                    b.Property<int?>("MaTaiKhoan")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SoTienPhat")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime");

                    b.HasKey("MaPhieuPhat")
                        .HasName("PHIEUPHAT_PK");

                    b.HasIndex("MaPhieuToCao");

                    b.HasIndex("MaTaiKhoan");

                    b.ToTable("PHIEUPHAT", (string)null);
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Phieutocao", b =>
                {
                    b.Property<int>("MaPhieuToCao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuToCao"));

                    b.Property<string>("LyDo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaBaiDang")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime");

                    b.HasKey("MaPhieuToCao")
                        .HasName("PHIEUTOCAO_PK");

                    b.HasIndex("MaBaiDang");

                    b.ToTable("PHIEUTOCAO", (string)null);
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Taikhoan", b =>
                {
                    b.Property<int>("MaTaiKhoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTaiKhoan"));

                    b.Property<int?>("ChucVu")
                        .HasColumnType("int");

                    b.Property<int?>("MaNhanVien")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TenDangNhap")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("MaTaiKhoan")
                        .HasName("TAIKHOAN_PK");

                    b.HasIndex("ChucVu");

                    b.ToTable("TAIKHOAN", (string)null);
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Thongke", b =>
                {
                    b.Property<int>("MaThongKe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThongKe"));

                    b.Property<int?>("SoBaiDangDaThem")
                        .HasColumnType("int");

                    b.Property<int?>("SoCvdaThem")
                        .HasColumnType("int")
                        .HasColumnName("SoCVDaThem");

                    b.Property<int?>("SoNguoiDaUngTuyen")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ThoiGian")
                        .HasColumnType("datetime");

                    b.HasKey("MaThongKe")
                        .HasName("THONGKE_PK");

                    b.ToTable("THONGKE", (string)null);
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Tongthongke", b =>
                {
                    b.Property<int>("MaTongTk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaTongTK");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTongTk"));

                    b.Property<int?>("TongBaiDang")
                        .HasColumnType("int");

                    b.Property<int?>("TongCv")
                        .HasColumnType("int")
                        .HasColumnName("TongCV");

                    b.Property<int?>("TongNguoiDaUngTuyen")
                        .HasColumnType("int");

                    b.HasKey("MaTongTk")
                        .HasName("TONGTHONGKE_PK");

                    b.ToTable("TONGTHONGKE", (string)null);
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Ungtuyen", b =>
                {
                    b.Property<int>("MaUngVien")
                        .HasColumnType("int");

                    b.Property<int>("MaBaiDang")
                        .HasColumnType("int");

                    b.Property<bool?>("ChapThuan")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("NgayUngTuyen")
                        .HasColumnType("datetime");

                    b.HasKey("MaUngVien", "MaBaiDang")
                        .HasName("UNGTUYEN_PK");

                    b.HasIndex("MaBaiDang");

                    b.ToTable("UNGTUYEN", (string)null);
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Ungvien", b =>
                {
                    b.Property<int>("MaUngVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaUngVien"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SDT");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ThamNien")
                        .HasColumnType("int");

                    b.Property<int?>("Tuoi")
                        .HasColumnType("int");

                    b.HasKey("MaUngVien")
                        .HasName("UNGVIEN_PK");

                    b.ToTable("UNGVIEN", (string)null);
                });

            modelBuilder.Entity("KinangBaidang", b =>
                {
                    b.Property<int>("MaKiNang")
                        .HasColumnType("int");

                    b.Property<int>("MaBaiDang")
                        .HasColumnType("int");

                    b.HasKey("MaKiNang", "MaBaiDang")
                        .HasName("KINANG_BAIDANG_PK");

                    b.HasIndex("MaBaiDang");

                    b.ToTable("KINANG_BAIDANG", (string)null);
                });

            modelBuilder.Entity("KinangUngvien", b =>
                {
                    b.Property<int>("MaKiNang")
                        .HasColumnType("int");

                    b.Property<int>("MaUngVien")
                        .HasColumnType("int");

                    b.HasKey("MaKiNang", "MaUngVien")
                        .HasName("KINANG_UNGVIEN_PK");

                    b.HasIndex("MaUngVien");

                    b.ToTable("KINANG_UNGVIEN", (string)null);
                });

            modelBuilder.Entity("Chitietlamviec", b =>
                {
                    b.HasOne("JobRecommendationWeb.Models.Baidang", null)
                        .WithMany()
                        .HasForeignKey("MaBaiDang")
                        .IsRequired()
                        .HasConstraintName("FK_MaBaiDang_CTLV");

                    b.HasOne("JobRecommendationWeb.Models.Lichsulamviec", null)
                        .WithMany()
                        .HasForeignKey("MaLslv")
                        .IsRequired()
                        .HasConstraintName("FK_MaLSLV_CTLV");
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Baidang", b =>
                {
                    b.HasOne("JobRecommendationWeb.Models.Hosocongty", "MaCongTyNavigation")
                        .WithMany("Baidangs")
                        .HasForeignKey("MaCongTy")
                        .HasConstraintName("FK_MaCongTy_BD");

                    b.HasOne("JobRecommendationWeb.Models.Taikhoan", "MaTaiKhoanNavigation")
                        .WithMany("Baidangs")
                        .HasForeignKey("MaTaiKhoan")
                        .HasConstraintName("FK_MaTaiKhoan_BD");

                    b.Navigation("MaCongTyNavigation");

                    b.Navigation("MaTaiKhoanNavigation");
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Cv", b =>
                {
                    b.HasOne("JobRecommendationWeb.Models.Ungvien", "MaUngVienNavigation")
                        .WithMany("Cvs")
                        .HasForeignKey("MaUngVien")
                        .HasConstraintName("FK_MaUngVien_CV");

                    b.Navigation("MaUngVienNavigation");
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Lichsulamviec", b =>
                {
                    b.HasOne("JobRecommendationWeb.Models.Taikhoan", "MaTaiKhoanNavigation")
                        .WithMany("Lichsulamviecs")
                        .HasForeignKey("MaTaiKhoan")
                        .HasConstraintName("FK_MaTaiKhoan_LSLV");

                    b.Navigation("MaTaiKhoanNavigation");
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Phieuphat", b =>
                {
                    b.HasOne("JobRecommendationWeb.Models.Phieutocao", "MaPhieuToCaoNavigation")
                        .WithMany("Phieuphats")
                        .HasForeignKey("MaPhieuToCao")
                        .HasConstraintName("FK_MaPhieuToCao_PP");

                    b.HasOne("JobRecommendationWeb.Models.Taikhoan", "MaTaiKhoanNavigation")
                        .WithMany("Phieuphats")
                        .HasForeignKey("MaTaiKhoan")
                        .HasConstraintName("FK_MaTaiKhoan_PP");

                    b.Navigation("MaPhieuToCaoNavigation");

                    b.Navigation("MaTaiKhoanNavigation");
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Phieutocao", b =>
                {
                    b.HasOne("JobRecommendationWeb.Models.Baidang", "MaBaiDangNavigation")
                        .WithMany("Phieutocaos")
                        .HasForeignKey("MaBaiDang")
                        .HasConstraintName("FK_MaBaiDang_PTC");

                    b.Navigation("MaBaiDangNavigation");
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Taikhoan", b =>
                {
                    b.HasOne("JobRecommendationWeb.Models.Chucvu", "ChucVuNavigation")
                        .WithMany("Taikhoans")
                        .HasForeignKey("ChucVu")
                        .HasConstraintName("FK_ChucVu_TK");

                    b.HasOne("JobRecommendationWeb.Models.Nhanvien", "ChucVu1")
                        .WithMany("Taikhoans")
                        .HasForeignKey("ChucVu")
                        .HasConstraintName("FK_MaNhanVien_TK");

                    b.Navigation("ChucVu1");

                    b.Navigation("ChucVuNavigation");
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Ungtuyen", b =>
                {
                    b.HasOne("JobRecommendationWeb.Models.Baidang", "MaBaiDangNavigation")
                        .WithMany("Ungtuyens")
                        .HasForeignKey("MaBaiDang")
                        .IsRequired()
                        .HasConstraintName("FK_MaBaiDang_UT");

                    b.HasOne("JobRecommendationWeb.Models.Ungvien", "MaUngVienNavigation")
                        .WithMany("Ungtuyens")
                        .HasForeignKey("MaUngVien")
                        .IsRequired()
                        .HasConstraintName("FK_MaUngVien_UT");

                    b.Navigation("MaBaiDangNavigation");

                    b.Navigation("MaUngVienNavigation");
                });

            modelBuilder.Entity("KinangBaidang", b =>
                {
                    b.HasOne("JobRecommendationWeb.Models.Baidang", null)
                        .WithMany()
                        .HasForeignKey("MaBaiDang")
                        .IsRequired()
                        .HasConstraintName("FK_MaBaiDang_KNBD");

                    b.HasOne("JobRecommendationWeb.Models.Kinang", null)
                        .WithMany()
                        .HasForeignKey("MaKiNang")
                        .IsRequired()
                        .HasConstraintName("FK_MaKiNang_KNBD");
                });

            modelBuilder.Entity("KinangUngvien", b =>
                {
                    b.HasOne("JobRecommendationWeb.Models.Kinang", null)
                        .WithMany()
                        .HasForeignKey("MaKiNang")
                        .IsRequired()
                        .HasConstraintName("FK_MaKiNang_KNUV");

                    b.HasOne("JobRecommendationWeb.Models.Ungvien", null)
                        .WithMany()
                        .HasForeignKey("MaUngVien")
                        .IsRequired()
                        .HasConstraintName("FK_MaUngVien_KNUV");
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Baidang", b =>
                {
                    b.Navigation("Phieutocaos");

                    b.Navigation("Ungtuyens");
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Chucvu", b =>
                {
                    b.Navigation("Taikhoans");
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Hosocongty", b =>
                {
                    b.Navigation("Baidangs");
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Nhanvien", b =>
                {
                    b.Navigation("Taikhoans");
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Phieutocao", b =>
                {
                    b.Navigation("Phieuphats");
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Taikhoan", b =>
                {
                    b.Navigation("Baidangs");

                    b.Navigation("Lichsulamviecs");

                    b.Navigation("Phieuphats");
                });

            modelBuilder.Entity("JobRecommendationWeb.Models.Ungvien", b =>
                {
                    b.Navigation("Cvs");

                    b.Navigation("Ungtuyens");
                });
#pragma warning restore 612, 618
        }
    }
}
